
/**
 * Copyright 2013 Marc Schachtel, Germany
 */

package com.cloutree.server.ui.model;

import java.io.File;

import com.cloutree.modelevaluator.ModelTypes;
import com.cloutree.server.persistence.entity.Model;
import com.cloutree.server.persistence.service.ModelService;
import com.cloutree.server.session.ClouTreeSession;
import com.cloutree.server.ui.navigation.NavigationController;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.VaadinService;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.ListSelect;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

/**
 * ModelCreator
 *
 * @author marc
 *
 * Since 28.08.2013
 */
public class ModelCreator extends CustomComponent implements Button.ClickListener {

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private VerticalLayout propertyLayout;

	@AutoGenerated
	private Button buttonSave;

	@AutoGenerated
	private ListSelect typeListSelect;

	@AutoGenerated
	private TextField textFieldModelName;

	private static final long serialVersionUID = 1L;
    
    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public ModelCreator() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	
		// IMPLEMENTATION
		
		// Type List
		for(ModelTypes type : ModelTypes.values()) {
			this.typeListSelect.addItem(type);
		}
		
		this.typeListSelect.setNullSelectionAllowed(false);
		this.typeListSelect.select(ModelTypes.values()[0]);
		
		this.buttonSave.addClickListener(this);
		this.textFieldModelName.focus();
    }

    /* (non-Javadoc)
     * @see com.vaadin.ui.Button.ClickListener#buttonClick(com.vaadin.ui.Button.ClickEvent)
     */
    @Override
    public void buttonClick(ClickEvent event) {
		if(this.textFieldModelName == null || this.textFieldModelName.getValue().length() < 5) {
		    Notification.show("Please enter a model name (at least 5 characters", Notification.Type.WARNING_MESSAGE);
		    return;
		}
		
		Model model = new Model();
		
		model.setName(this.textFieldModelName.getValue());
		model.setType(((ModelTypes)this.typeListSelect.getValue()).toString());
		if(ClouTreeSession.getInstance() != null)
				model.setInstance(ClouTreeSession.getInstance().getId());
		model.setActiveVersion(0);
		model.setReleased(false);
		
		ModelService modelService = new ModelService(ClouTreeSession.getInstance());
		
		if(!modelService.storeModel(model)) {
		    Notification.show("Unable to store model. Please check name!", Notification.Type.ERROR_MESSAGE);
		    return;
		}
		
		String basepath = VaadinService.getCurrent().getBaseDirectory().getAbsolutePath();
	        File file = new File(basepath + "/WEB-INF/storage/live/pmml/" + model.getName() + "/");
	        if(!file.exists()) {
	            file.mkdir();
	        }
		
		NavigationController.navigateToModel(model.getName());
		
		for (Window window : this.getUI().getWindows()) {
		    this.getUI().removeWindow(window);
		}
	
    }

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// propertyLayout
		propertyLayout = buildPropertyLayout();
		mainLayout.addComponent(propertyLayout,
				"top:0.0px;right:0.0px;bottom:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildPropertyLayout() {
		// common part: create layout
		propertyLayout = new VerticalLayout();
		propertyLayout.setImmediate(false);
		propertyLayout.setWidth("100.0%");
		propertyLayout.setHeight("100.0%");
		propertyLayout.setMargin(true);
		propertyLayout.setSpacing(true);
		
		// textFieldModelName
		textFieldModelName = new TextField();
		textFieldModelName.setCaption("Name");
		textFieldModelName.setImmediate(false);
		textFieldModelName.setWidth("100.0%");
		textFieldModelName.setHeight("-1px");
		propertyLayout.addComponent(textFieldModelName);
		
		// typeListSelect
		typeListSelect = new ListSelect();
		typeListSelect.setCaption("Type");
		typeListSelect.setImmediate(false);
		typeListSelect.setWidth("100.0%");
		typeListSelect.setHeight("100.0%");
		propertyLayout.addComponent(typeListSelect);
		propertyLayout.setExpandRatio(typeListSelect, 1.0f);
		
		// buttonSave
		buttonSave = new Button();
		buttonSave.setCaption("Save");
		buttonSave.setImmediate(true);
		buttonSave.setWidth("100.0%");
		buttonSave.setHeight("-1px");
		propertyLayout.addComponent(buttonSave);
		
		return propertyLayout;
	}

}
