
/**
 * Copyright 2013 Marc Schachtel, Germany
 */

package com.cloutree.server.ui.admin;

import java.util.List;

import com.cloutree.server.permission.UIPermissionManager;
import com.cloutree.server.permission.UserManager;
import com.cloutree.server.persistence.entity.User;
import com.cloutree.server.ui.navigation.Views;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

/**
 * TODO
 *
 * @author marc
 *
 * Since 10.09.2013
 */
public class UserAdministration extends CustomComponent implements View, Button.ClickListener {

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
    private AbsoluteLayout mainLayout;

    @AutoGenerated
    private VerticalLayout userAdminMainLayout;

    @AutoGenerated
    private HorizontalLayout buttonLayout;

    @AutoGenerated
    private Button buttonCreateUser;

    @AutoGenerated
    private Table userTable;

    private static final long serialVersionUID = 1L;
    
    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public UserAdministration() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	
		// IMPLEMENTATION
		this.initUserTable();
		this.buttonCreateUser.addClickListener(this);
	
    }

    @SuppressWarnings({ "unchecked", "deprecation" })
    private void initUserTable() {
	
		this.userTable.setImmediate(true);
		this.userTable.setEnabled(true);
		this.userTable.setSelectable(true);
		
		this.userTable.addContainerProperty("ID", Integer.class,  null);
		this.userTable.addContainerProperty("Username", String.class,  null);
		this.userTable.addContainerProperty("First Name", String.class,  null);
		this.userTable.addContainerProperty("Name", String.class,  null);
		this.userTable.addContainerProperty("E-Mail", String.class, null);
		this.userTable.addContainerProperty("Permissions", String.class,  null);
		this.userTable.addContainerProperty("Active", Boolean.class,  null);
		
		List<User> users = UserManager.getAllUsers();
		if(users == null) return;
		
		for(User user : users) {
		    
		    Item item = this.userTable.addItem(user.getId());
		    item.getItemProperty("ID").setValue(user.getId());
		    item.getItemProperty("Username").setValue(user.getUsername());
		    item.getItemProperty("First Name").setValue(user.getFirstname());
		    item.getItemProperty("Name").setValue(user.getName());
		    item.getItemProperty("E-Mail").setValue(user.getEmail());
		    item.getItemProperty("Permissions").setValue(user.getPermission());
		    item.getItemProperty("Active").setValue(user.getActive());
	
		}
		
		this.userTable.setPageLength(0);
		
		this.userTable.addListener(new ItemClickEvent.ItemClickListener() {
			private static final long serialVersionUID = 2068314108919135281L;
			public void itemClick(ItemClickEvent event) {
			    if (event.isDoubleClick()) {
				
				VerticalLayout layout = new VerticalLayout();
				layout.setMargin(false);
				layout.setSpacing(false);
				layout.setSizeFull();
				
				Window dialog = new Window();
				dialog.center();
				dialog.setModal(true);
				dialog.setHeight("500px");
				dialog.setWidth("600px");
				dialog.setResizable(false);
				
				UserEditor editor = new UserEditor();
				editor.setSizeFull();
				editor.setUser((Integer)event.getItemId());
				editor.init();
				layout.addComponent(editor);
				dialog.setCaption("Edit user: " + event.getItemId());
				
				dialog.setContent(layout);
				event.getComponent().getUI().addWindow(dialog);
				
			    }
			}
		});
	
    }
    
    @Override
    public void enter(ViewChangeEvent event) {
		if(!UIPermissionManager.getInstance().hasPermission(UserManager.getCurrentUser(), this.getClass())){
		    Notification.show("No Permission to enter this view", Notification.Type.ERROR_MESSAGE);
		    event.getNavigator().navigateTo(Views.ERROR.name());
		}
    }

    /* (non-Javadoc)
     * @see com.vaadin.ui.Button.ClickListener#buttonClick(com.vaadin.ui.Button.ClickEvent)
     */
    @Override
    public void buttonClick(ClickEvent event) {
		VerticalLayout layout = new VerticalLayout();
		layout.setMargin(false);
		layout.setSpacing(false);
		layout.setSizeFull();
		
		Window dialog = new Window();
		dialog.center();
		dialog.setModal(true);
		dialog.setHeight("500px");
		dialog.setWidth("600px");
		dialog.setResizable(false);
		
		UserEditor editor = new UserEditor();
		editor.setSizeFull();
		editor.init();
		layout.addComponent(editor);
		dialog.setCaption("Create new user");
		
		dialog.setContent(layout);
		event.getComponent().getUI().addWindow(dialog);
    }

    @AutoGenerated
    private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// userAdminMainLayout
		userAdminMainLayout = buildUserAdminMainLayout();
		mainLayout.addComponent(userAdminMainLayout,
			"top:0.0px;right:0.0px;bottom:0.0px;left:0.0px;");
		
		return mainLayout;
    }

    @AutoGenerated
    private VerticalLayout buildUserAdminMainLayout() {
		// common part: create layout
		userAdminMainLayout = new VerticalLayout();
		userAdminMainLayout.setImmediate(false);
		userAdminMainLayout.setWidth("100.0%");
		userAdminMainLayout.setHeight("100.0%");
		userAdminMainLayout.setMargin(false);
		userAdminMainLayout.setSpacing(true);
		
		// userTable
		userTable = new Table();
		userTable.setImmediate(false);
		userTable.setWidth("100.0%");
		userTable.setHeight("100.0%");
		userAdminMainLayout.addComponent(userTable);
		userAdminMainLayout.setExpandRatio(userTable, 1.0f);
		
		// buttonLayout
		buttonLayout = buildButtonLayout();
		userAdminMainLayout.addComponent(buttonLayout);
		userAdminMainLayout.setComponentAlignment(buttonLayout, new Alignment(
			34));
		
		return userAdminMainLayout;
    }

    @AutoGenerated
    private HorizontalLayout buildButtonLayout() {
		// common part: create layout
		buttonLayout = new HorizontalLayout();
		buttonLayout.setImmediate(false);
		buttonLayout.setWidth("-1px");
		buttonLayout.setHeight("-1px");
		buttonLayout.setMargin(false);
		
		// buttonCreateUser
		buttonCreateUser = new Button();
		buttonCreateUser.setCaption("Create User");
		buttonCreateUser.setImmediate(true);
		buttonCreateUser.setWidth("-1px");
		buttonCreateUser.setHeight("-1px");
		buttonLayout.addComponent(buttonCreateUser);
		
		return buttonLayout;
    }

}
